name: Data Quality Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  run-data-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.0'
        use-public-rspm: true
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev libgdal-dev libudunits2-dev
    
    - name: Install R dependencies (complete set)
      run: |
        Rscript -e "
        options(repos = c(CRAN = 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest'));
        
        # Install tidyverse first
        install.packages('tidyverse', dependencies = TRUE);
        cat('Tidyverse installed\n');
        
        # Install all packages the script and external functions need
        packages <- c(
          'here', 
          'devtools', 
          'hms', 
          'fs', 
          'knitr', 
          'kableExtra', 
          'DT', 
          'rmarkdown', 
          'plotly', 
          'downloadthis',
          'rlog',          # Missing package causing the error
          'clipr',         # Used in external functions
          'cli',           # Used in external functions  
          'rstudioapi'     # Used in external functions (though may not work in Actions)
        );
        
        # Install packages with error handling
        for (pkg in packages) {
          tryCatch({
            if (!requireNamespace(pkg, quietly = TRUE)) {
              install.packages(pkg, dependencies = TRUE);
              cat('Installed:', pkg, '\n');
            } else {
              cat('Already available:', pkg, '\n');
            }
          }, error = function(e) {
            cat('Failed to install', pkg, ':', e\$message, '\n');
            # Continue with other packages
          });
        }
        
        cat('Package installation completed\n');
        
        # Test loading key packages
        library(tidyverse);
        library(devtools);
        library(rmarkdown);
        library(rlog);
        cat('Key packages loaded successfully\n');
        "
    
    - name: Run data validation
      run: |
        mkdir -p data_checks_reports
        
        # Download the script
        curl -L -o data_package_checks_github_action.R https://github.com/river-corridors-sfa/rcsfa-data_processing_for_publication/raw/refs/heads/main/Data_Package_Validation/data_package_checks_github_action.R
        
        echo "Running validation script..."
        echo "Current directory: $(pwd)"
        echo "Files in directory (first 20):"
        ls -la | head -20
        echo ""
        
        # Run the script with detailed output
        Rscript data_package_checks_github_action.R > data_checks_reports/validation-log.txt 2>&1
        
        SCRIPT_EXIT_CODE=$?
        echo "Script completed with exit code: $SCRIPT_EXIT_CODE"
        echo ""
        echo "=== VALIDATION LOG ==="
        cat data_checks_reports/validation-log.txt
        echo "=== END LOG ==="
        
        # Don't fail the workflow if the script has issues
        exit 0
      continue-on-error: true
    
    - name: Create GitHub summary
      run: |
        # Create markdown summary for GitHub
        echo "## 📊 Data Package Validation Results" > data_checks_reports/validation-summary.md
        echo "**Generated:** $(date)" >> data_checks_reports/validation-summary.md
        echo "**Commit:** ${{ github.sha }}" >> data_checks_reports/validation-summary.md
        echo "**Author:** Brieanne Forbes via GitHub action" >> data_checks_reports/validation-summary.md
        echo "" >> data_checks_reports/validation-summary.md
        
        # Check for HTML report
        if [ -f data_checks_reports/Checks_Report_*.html ]; then
          HTML_FILE=$(basename data_checks_reports/Checks_Report_*.html)
          echo "### 📄 Full HTML Report Available:" >> data_checks_reports/validation-summary.md
          echo "✅ **Success!** Download the interactive report: [\`$HTML_FILE\`](../../raw/${{ github.sha }}/data_checks_reports/$HTML_FILE)" >> data_checks_reports/validation-summary.md
          echo "" >> data_checks_reports/validation-summary.md
        else
          echo "### ⚠️ HTML Report Generation" >> data_checks_reports/validation-summary.md
          echo "HTML report was not generated. Check the validation log below for details." >> data_checks_reports/validation-summary.md
          echo "" >> data_checks_reports/validation-summary.md
        fi
        
        # Add summary file if available
        if [ -f data_checks_reports/validation_summary_*.txt ]; then
          echo "### Summary:" >> data_checks_reports/validation-summary.md
          echo "\`\`\`" >> data_checks_reports/validation-summary.md
          cat data_checks_reports/validation_summary_*.txt >> data_checks_reports/validation-summary.md
          echo "\`\`\`" >> data_checks_reports/validation-summary.md
          echo "" >> data_checks_reports/validation-summary.md
        fi
        
        # Add validation log (last 150 lines to capture more context)
        echo "### Validation Log:" >> data_checks_reports/validation-summary.md
        echo "<details><summary>Click to expand validation log</summary>" >> data_checks_reports/validation-summary.md
        echo "" >> data_checks_reports/validation-summary.md
        echo "\`\`\`" >> data_checks_reports/validation-summary.md
        if [ -f data_checks_reports/validation-log.txt ]; then
          tail -150 data_checks_reports/validation-log.txt >> data_checks_reports/validation-summary.md
        else
          echo "No validation log found" >> data_checks_reports/validation-summary.md
        fi
        echo "\`\`\`" >> data_checks_reports/validation-summary.md
        echo "</details>" >> data_checks_reports/validation-summary.md
        
        echo "" >> data_checks_reports/validation-summary.md
        echo "📁 **All files available in:** \`data_checks_reports/\`" >> data_checks_reports/validation-summary.md
    
    - name: List all generated files
      run: |
        echo "Files created in data_checks_reports:"
        ls -la data_checks_reports/ || echo "No data_checks_reports directory found"
    
    - name: Check if results changed
      id: changes
      run: |
        git add data_checks_reports/
        if git diff --staged --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit results back to repo
      if: steps.changes.outputs.changed == 'true' && github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git add data_checks_reports/
        git commit -m "📊 Update data package validation report [skip ci]
        
        - Generated from commit ${{ github.sha }}
        - Validation completed on $(date)
        - Author: Brieanne Forbes via GitHub action"
        git push
    
    - name: Comment on PR with results
      if: github.event_name == 'pull_request' && steps.changes.outputs.changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr comment ${{ github.event.pull_request.number }} \
          --body-file data_checks_reports/validation-summary.md
    
    - name: Upload validation reports
      uses: actions/upload-artifact@v4
      with:
        name: data-validation-report-${{ github.sha }}
        path: data_checks_reports/
        retention-days: 30